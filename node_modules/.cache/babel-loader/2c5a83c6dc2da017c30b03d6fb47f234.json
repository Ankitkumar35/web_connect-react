{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/ism-connect-web-main/src/components/post/ImageUploader.js\";\nimport { Component } from 'react';\nimport { Button, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageUploader extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selectedFile: null,\n      isSelected: false,\n      isUploading: false,\n      imageURLs: []\n    };\n\n    this.onImageChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        isSelected: true\n      });\n    };\n\n    this.uploadImage = async () => {\n      this.setState({\n        isUploading: true\n      });\n      const formData = new FormData();\n      formData.append('image', this.state.selectedFile, this.state.selectedFile.name);\n      console.log(formData);\n\n      try {\n        const {\n          data\n        } = await axios.post(process.env.REACT_APP_API_URL + '/api/v1/upload', formData); // this.props.addImage({ id: data.imageId, name: this.state.selectedFile.name })\n        // console.log(this.props.images);\n        // const { data } = await axios.post(process.env.REACT_APP_API_URL + '/api/v1/upload', formData)\n\n        this.props.addImage({\n          // id: Math.floor(Math.random()) /*data.imageId*/,\n          id: data.imageId,\n          name: this.state.selectedFile.name,\n          file: this.state.selectedFile\n        });\n      } catch (err) {\n        console.error(err);\n      }\n\n      this.setState({\n        isUploading: false\n      });\n    };\n  }\n\n  render() {\n    const imageURLs = this.props.images.map(i => URL.createObjectURL(i.file));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row justify-content-around pb-4 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            onChange: this.onImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.uploadImage,\n            disabled: !this.state.isSelected || this.state.isUploading,\n            children: \"Add image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), this.props.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column pt-4\",\n        style: {\n          maxHeight: '100px',\n          overflowY: 'auto'\n        },\n        children: this.props.images && this.props.images.map((img, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row justify-content-around align-items-center pb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              height: \"80px\",\n              width: \"80px\",\n              src: imageURLs[idx],\n              style: {\n                objectFit: 'cover',\n                margin: '0 auto',\n                border: '1px solid blue'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              onClick: () => this.props.deleteImage(img.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 10\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/components/post/ImageUploader.js"],"names":["Component","Button","Image","axios","ImageUploader","state","selectedFile","isSelected","isUploading","imageURLs","onImageChange","event","setState","target","files","uploadImage","formData","FormData","append","name","console","log","data","post","process","env","REACT_APP_API_URL","props","addImage","id","imageId","file","err","error","render","images","map","i","URL","createObjectURL","length","maxHeight","overflowY","img","idx","objectFit","margin","border","deleteImage"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { Button, Image } from 'react-bootstrap'\nimport axios from 'axios'\n\nexport default class ImageUploader extends Component {\n  state = {\n    selectedFile: null,\n    isSelected: false,\n    isUploading:false,\n    imageURLs: []\n  }\n\n\n  onImageChange = event => {\n    this.setState({ selectedFile: event.target.files[0], isSelected: true })\n  }\n\n  uploadImage = async () => {\n    this.setState({isUploading:true})\n    const formData = new FormData()\n    formData.append(\n      'image',\n      this.state.selectedFile,\n      this.state.selectedFile.name,\n    )\n    console.log(formData);\n\n    try {\n    \tconst { data } = \n    \t\tawait axios.post(process.env.REACT_APP_API_URL + '/api/v1/upload', formData)\n    \t\t// this.props.addImage({ id: data.imageId, name: this.state.selectedFile.name })\n        // console.log(this.props.images);\n    \t// const { data } = await axios.post(process.env.REACT_APP_API_URL + '/api/v1/upload', formData)\n      this.props.addImage({ \n        // id: Math.floor(Math.random()) /*data.imageId*/,\n        id:data.imageId, \n        name: this.state.selectedFile.name, file: \n        this.state.selectedFile \n      })\n    } catch (err) {\n    \tconsole.error(err)\n    }\n    this.setState({isUploading:false})\n  }\n\n  render() {\n    const imageURLs = this.props.images.map(i => URL.createObjectURL(i.file))\n    return (\n      <div>\n        <div className=\"d-flex flex-row justify-content-around pb-4 pt-4\">\n        \t<div>\n        \t\t<input type='file' className=\"form-control\" onChange={this.onImageChange} />\n        \t</div>\n          <div>\n          \t<Button onClick={this.uploadImage} disabled={(!this.state.isSelected)||(this.state.isUploading)}>\n\t          \tAdd image\n\t          </Button>\n          </div>\n        </div>\n        {this.props.images.length > 0 && <div>\n          \t<hr />\n          </div>}\n        <div className=\"d-flex flex-column pt-4\" style={{ maxHeight: '100px', overflowY: 'auto' }}>\n        \t{this.props.images && this.props.images.map((img, idx) => (\n\t\t      \t<div key={idx} className=\"d-flex flex-row justify-content-around align-items-center pb-3\">\n              <div>\n                <Image height=\"80px\" width=\"80px\" src={imageURLs[idx]} style={{ objectFit: 'cover', margin: '0 auto', border: '1px solid blue' }} />\n              </div>\n\t\t          <div>\n\t\t          \t<Button variant=\"warning\" onClick={() => this.props.deleteImage(img.id)}>Delete</Button>\n\t\t          </div>\n\t\t        </div>\n\t\t        )\n\t        )}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}