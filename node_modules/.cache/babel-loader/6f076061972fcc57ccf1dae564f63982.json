{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/ism-connect-web-main/src/components/signin/UserSignInUp.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport { registerUser, loginUser } from '../../redux/actions/auth';\nimport SignInForm from './SignInForm';\nimport SignUpDetails from './SignUpDetails';\nimport SignUpPass from './SignUpPass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSignInUp = props => {\n  _s();\n\n  const [sUpPass, setSUpPass] = useState('');\n  const [sUpPassRem, setSUpPassRem] = useState('');\n  const [sUpFullName, setSUpFullName] = useState('');\n  const [sUpMail, setSUpMail] = useState('');\n  const [sUpPhone, setSUpPhone] = useState('');\n  const [sUpYear, setSUpYear] = useState('');\n  const [sInId, setSInId] = useState('');\n  const [sInPass, setSInPass] = useState('');\n  const [step, setStep] = useState(props.step || 1);\n  const [showPass, setShowPass] = useState(false);\n  const [confirmHasBeenTouched, setConfirmHasBeenTouched] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const nextStep = () => {\n    const savedstep = step;\n    setStep(savedstep + 1);\n  };\n\n  const prevStep = () => {\n    // eslint-disable-next-line no-unused-vars\n    const savedstep = step;\n    setStep(1);\n  };\n\n  const values = {\n    sInId,\n    sInPass,\n    sUpFullName,\n    sUpPhone,\n    sUpYear,\n    sUpMail,\n    sUpPass,\n    sUpPassRem\n  };\n  const setValues = {\n    setSInId,\n    setSInPass,\n    setSUpFullName,\n    setSUpPhone,\n    setSUpYear,\n    setSUpMail,\n    setSUpPass,\n    setSUpPassRem\n  };\n\n  function resetSignInForm() {\n    setStep(1);\n    setShowPass(false);\n    setSInId('');\n    setSInPass('');\n  }\n\n  function resetSignUpForm() {\n    setStep(2);\n    setShowPass(false);\n    setSUpPass('');\n    setConfirmHasBeenTouched(false);\n    setSUpPassRem('');\n    setSUpMail('');\n    setSUpYear('');\n    setSUpPhone('');\n  }\n\n  function resetAllForms() {\n    resetSignUpForm();\n    resetSignInForm();\n  }\n\n  function signUpDetailsAreValid() {\n    return !!sUpMail && !!sUpFullName && validator.isEmail(sUpMail);\n  }\n\n  function isEmailValid(mail) {\n    return !mail || validator.isEmail(mail);\n  }\n\n  function isPhoneValid(phone) {\n    return !phone || validator.isMobilePhone(phone);\n  }\n\n  function passwordsAreMatchingOrEmpty() {\n    return typeof sUpPass === 'string' && typeof sUpPassRem === 'string' && sUpPass === sUpPassRem;\n  }\n\n  function passwordsAreMatching() {\n    return !!sUpPass && !!sUpPassRem && typeof sUpPass === 'string' && typeof sUpPassRem === 'string' && sUpPass === sUpPassRem;\n  }\n\n  const callback = data => {\n    setTimeout(() => {\n      var _data$response;\n\n      if ((data === null || data === void 0 ? void 0 : (_data$response = data.response) === null || _data$response === void 0 ? void 0 : _data$response.state) >= 400 || data instanceof Error) {\n        setStep(2);\n      } else resetAllForms();\n\n      setLoading(false);\n    }, 2000);\n  };\n\n  const handleRegister = ev => {\n    function cb() {\n      const data = {\n        name: sUpFullName,\n        email: sUpMail,\n        password: sUpPass,\n        password_confirmation: sUpPassRem,\n        phone: sUpPhone\n      };\n      const url = new URL(window.location.href);\n      const params = {};\n\n      for (const p of url.searchParams.entries()) {\n        params[p[0]] = p[1];\n      }\n\n      props.registerUser(data, params, callback);\n    }\n\n    ev.preventDefault();\n    setLoading(true);\n    cb();\n  };\n\n  const handleSignIn = ev => {\n    function cb() {\n      const data = {\n        email: sInId,\n        password: sInPass\n      };\n      const url = new URL(window.location.href);\n      const params = {};\n\n      for (const p of url.searchParams.entries()) {\n        params[p[0]] = p[1];\n      }\n\n      props.loginUser(data, params, callback);\n    }\n\n    ev.preventDefault();\n    setLoading(true);\n    cb();\n  };\n\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SignInForm, {\n          values: values,\n          setValues: setValues,\n          nextStep: nextStep,\n          showPass: showPass,\n          setShowPass: setShowPass,\n          emailIsValid: isEmailValid(sInId) || isPhoneValid(sInId),\n          loading: loading,\n          handleSignIn: handleSignIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), props.currentUserId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SignUpDetails, {\n          values: values,\n          setValues: setValues,\n          nextStep: nextStep,\n          prevStep: prevStep,\n          allowNext: signUpDetailsAreValid(),\n          emailIsValid: isEmailValid(sUpMail),\n          phoneIsValid: isPhoneValid(sUpPhone),\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SignUpPass, {\n          values: values,\n          setValues: setValues // showPass={showPass}\n          // setShowPass={setShowPass}\n          ,\n          nextStep: nextStep,\n          prevStep: prevStep,\n          allowRegister: passwordsAreMatching(),\n          passwordsAreMatchingOrEmpty: passwordsAreMatchingOrEmpty(),\n          confirmHasBeenTouched: confirmHasBeenTouched,\n          setConfirmHasBeenTouched: setConfirmHasBeenTouched,\n          handleRegister: handleRegister,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this);\n  }\n};\n\n_s(UserSignInUp, \"Ug77Zd/T9W6fJGA5JFvL9stsfjo=\");\n\n_c = UserSignInUp;\nUserSignInUp.propTypes = {\n  registerUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nexport default connect(mapStateToProps, {\n  registerUser,\n  loginUser\n})(UserSignInUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignInUp\");","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/components/signin/UserSignInUp.js"],"names":["useState","connect","PropTypes","validator","registerUser","loginUser","SignInForm","SignUpDetails","SignUpPass","UserSignInUp","props","sUpPass","setSUpPass","sUpPassRem","setSUpPassRem","sUpFullName","setSUpFullName","sUpMail","setSUpMail","sUpPhone","setSUpPhone","sUpYear","setSUpYear","sInId","setSInId","sInPass","setSInPass","step","setStep","showPass","setShowPass","confirmHasBeenTouched","setConfirmHasBeenTouched","loading","setLoading","nextStep","savedstep","prevStep","values","setValues","resetSignInForm","resetSignUpForm","resetAllForms","signUpDetailsAreValid","isEmail","isEmailValid","mail","isPhoneValid","phone","isMobilePhone","passwordsAreMatchingOrEmpty","passwordsAreMatching","callback","data","setTimeout","response","state","Error","handleRegister","ev","cb","name","email","password","password_confirmation","url","URL","window","location","href","params","p","searchParams","entries","preventDefault","handleSignIn","currentUserId","propTypes","func","isRequired","mapStateToProps","currentUser","user"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport validator from 'validator'\n\nimport { registerUser, loginUser } from '../../redux/actions/auth'\nimport SignInForm from './SignInForm'\nimport SignUpDetails from './SignUpDetails'\nimport SignUpPass from './SignUpPass'\n\nconst UserSignInUp = (props) => {\n  const [sUpPass, setSUpPass] = useState('')\n  const [sUpPassRem, setSUpPassRem] = useState('')\n  const [sUpFullName, setSUpFullName] = useState('')\n  const [sUpMail, setSUpMail] = useState('')\n  const [sUpPhone, setSUpPhone] = useState('')\n  const [sUpYear, setSUpYear] = useState('')\n  const [sInId, setSInId] = useState('')\n  const [sInPass, setSInPass] = useState('')\n  const [step, setStep] = useState(props.step || 1)\n  const [showPass, setShowPass] = useState(false)\n  const [confirmHasBeenTouched, setConfirmHasBeenTouched] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const nextStep = () => {\n    const savedstep = step\n    setStep(savedstep + 1)\n  }\n\n  const prevStep = () => {\n    // eslint-disable-next-line no-unused-vars\n    const savedstep = step\n    setStep(1)\n  }\n\n  const values = { sInId, sInPass, sUpFullName, sUpPhone, sUpYear, sUpMail, sUpPass, sUpPassRem }\n  const setValues = { setSInId, setSInPass, setSUpFullName, setSUpPhone, setSUpYear, setSUpMail, setSUpPass, setSUpPassRem }\n\n  function resetSignInForm () {\n    setStep(1)\n    setShowPass(false)\n\n    setSInId('')\n    setSInPass('')\n  }\n\n  function resetSignUpForm () {\n    setStep(2)\n    setShowPass(false)\n\n    setSUpPass('')\n    setConfirmHasBeenTouched(false)\n    setSUpPassRem('')\n    setSUpMail('')\n    setSUpYear('')\n    setSUpPhone('')\n  }\n\n  function resetAllForms () {\n    resetSignUpForm()\n    resetSignInForm()\n  }\n\n  function signUpDetailsAreValid () {\n    return (!!sUpMail && !!sUpFullName && validator.isEmail(sUpMail))\n  }\n\n  function isEmailValid (mail) {\n    return (!mail || validator.isEmail(mail))\n  }\n\n  function isPhoneValid (phone) {\n    return (!phone || validator.isMobilePhone(phone))\n  }\n\n  function passwordsAreMatchingOrEmpty () {\n    return (typeof sUpPass === 'string' &&\n      typeof sUpPassRem === 'string' &&\n      sUpPass === sUpPassRem)\n  }\n\n  function passwordsAreMatching () {\n    return (!!sUpPass &&\n      !!sUpPassRem &&\n      typeof sUpPass === 'string' &&\n      typeof sUpPassRem === 'string' &&\n      sUpPass === sUpPassRem)\n  }\n\n  const callback = (data) => {\n    setTimeout(() => {\n      if ((data?.response?.state >= 400) || data instanceof Error) {\n        setStep(2)\n      } else resetAllForms()\n      setLoading(false)\n    }, 2000)\n  }\n\n  const handleRegister = (ev) => {\n    function cb () {\n      const data = {\n        name: sUpFullName,\n        email: sUpMail,\n        password: sUpPass,\n        password_confirmation: sUpPassRem,\n        phone: sUpPhone\n      }\n      const url = new URL(window.location.href)\n      const params = {}\n      for (const p of url.searchParams.entries()) { params[p[0]] = p[1] }\n      props.registerUser(data, params, callback)\n    }\n    ev.preventDefault()\n    setLoading(true)\n    cb()\n  }\n\n  const handleSignIn = (ev) => {\n    function cb () {\n      const data = {\n        email: sInId,\n        password: sInPass\n      }\n      const url = new URL(window.location.href)\n      const params = {}\n      for (const p of url.searchParams.entries()) { params[p[0]] = p[1] }\n      props.loginUser(data, params, callback)\n    }\n    ev.preventDefault()\n    setLoading(true)\n    cb()\n  }\n\n  switch (step) {\n    case 1:\n      return (\n        <div>\n          <SignInForm\n            values={values}\n            setValues={setValues}\n            nextStep={nextStep}\n            showPass={showPass}\n            setShowPass={setShowPass}\n            emailIsValid={isEmailValid(sInId) || isPhoneValid(sInId)}\n            loading={loading}\n            handleSignIn={handleSignIn}\n          />\n          {props.currentUserId}\n        </div>\n      )\n    case 2:\n      return (\n        <div>\n          <SignUpDetails\n            values={values}\n            setValues={setValues}\n            nextStep={nextStep}\n            prevStep={prevStep}\n            allowNext={signUpDetailsAreValid()}\n            emailIsValid={isEmailValid(sUpMail)}\n            phoneIsValid={isPhoneValid(sUpPhone)}\n            loading={loading}\n          />\n        </div>\n      )\n    default:\n      return (\n        <div>\n          <SignUpPass\n            values={values}\n            setValues={setValues}\n            // showPass={showPass}\n            // setShowPass={setShowPass}\n            nextStep={nextStep}\n            prevStep={prevStep}\n            allowRegister={passwordsAreMatching()}\n            passwordsAreMatchingOrEmpty={passwordsAreMatchingOrEmpty()}\n            confirmHasBeenTouched={confirmHasBeenTouched}\n            setConfirmHasBeenTouched={setConfirmHasBeenTouched}\n            handleRegister={handleRegister}\n            loading={loading}\n          />\n        </div>\n      )\n  }\n}\n\nUserSignInUp.propTypes = {\n  registerUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n})\n\nexport default connect(mapStateToProps, { registerUser, loginUser })(UserSignInUp)\n"]},"metadata":{},"sourceType":"module"}