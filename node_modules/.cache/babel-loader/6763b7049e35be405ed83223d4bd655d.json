{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/ism-connect-web-main/src/components/post/JobEditor.js\";\nimport { Component } from 'react';\nimport SuggestibleInput from '../common/SuggestibleInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jobInputs = [{\n  key: 'company',\n  placeholder: 'Company'\n}, {\n  key: 'category',\n  placeholder: 'Category'\n}, {\n  key: 'profile',\n  placeholder: 'Job profile'\n}];\nexport default class JobEditor extends Component {\n  render() {\n    const {\n      value,\n      handleValueChange\n    } = this.props;\n    value.company = value.company || '';\n    value.profile = value.profile || '';\n    value.category = value.category || '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-editor-container\",\n      children: [(jobInputs || []).map((j, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-editor-input-container\",\n          children: /*#__PURE__*/_jsxDEV(SuggestibleInput, {\n            placeholder: j.placeholder,\n            value: value[j.key],\n            handleValueChange: (ev, _ref) => {\n              let {\n                newValue\n              } = _ref;\n              return handleValueChange({ ...value,\n                [j.key]: newValue\n              });\n            },\n            possibleSuggestions: this.props.possibleSuggestions ? this.props.possibleSuggestions[j.key] : null\n          }, j.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          className: \"job-editor-input-container\",\n          value: value['url'],\n          onChange: ev => {\n            handleValueChange({ ...value,\n              url: ev.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/components/post/JobEditor.js"],"names":["Component","SuggestibleInput","jobInputs","key","placeholder","JobEditor","render","value","handleValueChange","props","company","profile","category","map","j","idx","ev","newValue","possibleSuggestions","url","target"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,WAAW,EAAE;AAFf,CADgB,EAKhB;AACED,EAAAA,GAAG,EAAE,UADP;AAEEC,EAAAA,WAAW,EAAE;AAFf,CALgB,EAShB;AACED,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,WAAW,EAAE;AAFf,CATgB,CAAlB;AAeA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC/CM,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA+B,KAAKC,KAA1C;AAEAF,IAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACG,OAAN,IAAiB,EAAjC;AACAH,IAAAA,KAAK,CAACI,OAAN,GAAgBJ,KAAK,CAACI,OAAN,IAAiB,EAAjC;AACAJ,IAAAA,KAAK,CAACK,QAAN,GAAiBL,KAAK,CAACK,QAAN,IAAkB,EAAnC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,iBAEI,CAACV,SAAS,IAAI,EAAd,EAAkBW,GAAlB,CAAsB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAChC,4BACE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE,QAAC,gBAAD;AACE,YAAA,WAAW,EAAED,CAAC,CAACV,WADjB;AAEE,YAAA,KAAK,EAAEG,KAAK,CAACO,CAAC,CAACX,GAAH,CAFd;AAGE,YAAA,iBAAiB,EAAE,CAACa,EAAD;AAAA,kBAAK;AAAEC,gBAAAA;AAAF,eAAL;AAAA,qBAAsBT,iBAAiB,CAAC,EACzD,GAAGD,KADsD;AAEzD,iBAACO,CAAC,CAACX,GAAH,GAASc;AAFgD,eAAD,CAAvC;AAAA,aAHrB;AAQE,YAAA,mBAAmB,EAAI,KAAKR,KAAL,CAAWS,mBAAX,GACrB,KAAKT,KAAL,CAAWS,mBAAX,CAA+BJ,CAAC,CAACX,GAAjC,CADqB,GACmB;AAT5C,aAOOW,CAAC,CAACX,GAPT;AAAA;AAAA;AAAA;AAAA;AADF,WAAiDY,GAAjD;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAhBD,CAFJ,eAoBE;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,KAAZ;AAAkB,UAAA,SAAS,EAAC,4BAA5B;AAAyD,UAAA,KAAK,EAAER,KAAK,CAAC,KAAD,CAArE;AAA8E,UAAA,QAAQ,EAAES,EAAE,IAAI;AAC5FR,YAAAA,iBAAiB,CAAC,EAChB,GAAGD,KADa;AAEhBY,cAAAA,GAAG,EAAEH,EAAE,CAACI,MAAH,CAAUb;AAFC,aAAD,CAAjB;AAID;AALD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAvC8C","sourcesContent":["import { Component } from 'react'\n\nimport SuggestibleInput from '../common/SuggestibleInput'\n\nconst jobInputs = [\n  {\n    key: 'company',\n    placeholder: 'Company'\n  },\n  {\n    key: 'category',\n    placeholder: 'Category'\n  },\n  {\n    key: 'profile',\n    placeholder: 'Job profile'\n  }\n]\n\nexport default class JobEditor extends Component {\n  render () {\n    const { value, handleValueChange } = this.props\n\n    value.company = value.company || ''\n    value.profile = value.profile || ''\n    value.category = value.category || ''\n\n    return (\n      <div className='post-editor-container'>\n        {\n          (jobInputs || []).map((j, idx) => {\n            return (\n              <div className='job-editor-input-container' key={idx}>\n                <SuggestibleInput\n                  placeholder={j.placeholder}\n                  value={value[j.key]}\n                  handleValueChange={(ev, { newValue }) => handleValueChange({\n                    ...value,\n                    [j.key]: newValue\n                  })}\n                  key={j.key}\n                  possibleSuggestions = {this.props.possibleSuggestions ? \n                    this.props.possibleSuggestions[j.key] : null}\n                />\n              </div>\n            )\n          })\n        }\n        <div>\n          <input type=\"url\" className='job-editor-input-container' value={value['url']} onChange={ev => {\n            handleValueChange({\n              ...value,\n              url: ev.target.value\n            })\n          }} />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}