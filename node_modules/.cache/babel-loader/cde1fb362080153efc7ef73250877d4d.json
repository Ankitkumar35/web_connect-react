{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/ism-connect-web-main/src/components/organisation/HeaderOrganisation.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport * as icons from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport BrowserStore from '../../utils/BrowserStore';\nimport { isLoggedIn } from '../../utils/auth';\nimport '../../styles/organisation/profileHeader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderOrganisation = () => {\n  _s();\n\n  const [data, setData] = useState({\n    loading: true,\n    arr: [],\n    flag: 0\n  });\n  let user = {};\n\n  if (isLoggedIn()) {\n    user = BrowserStore.get('user-info', true);\n\n    if (data.flag === 0) {\n      axios.post(process.env.REACT_APP_API_URL + '/api/v1/findNotification', {\n        user_id: user.id\n      }, {\n        headers: {\n          Authorization: `Bearer ${BrowserStore.get('userToken')}`\n        }\n      }).then(res => {\n        setData({\n          loading: false,\n          arr: res.data,\n          flag: 1\n        });\n        console.log('notification');\n        console.log(data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ha-prof-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ha-edit-add-organisation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ha-btn-white\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"ha-plus-fa\",\n          icon: icons.faPlusCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 90\n        }, this), \" Add Your Memories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"ha-info-fa\",\n        icon: icons.faInfoCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderOrganisation, \"0Zvpd5m5SbD6Z/jwlmgJPXjBjno=\");\n\n_c = HeaderOrganisation;\nexport default HeaderOrganisation;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderOrganisation\");","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/components/organisation/HeaderOrganisation.js"],"names":["useState","axios","icons","FontAwesomeIcon","BrowserStore","isLoggedIn","HeaderOrganisation","data","setData","loading","arr","flag","user","get","post","process","env","REACT_APP_API_URL","user_id","id","headers","Authorization","then","res","console","log","catch","err","faPlusCircle","faInfoCircle"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,6CAAP;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC/BS,IAAAA,OAAO,EAAE,IADsB;AAE/BC,IAAAA,GAAG,EAAE,EAF0B;AAG/BC,IAAAA,IAAI,EAAE;AAHyB,GAAD,CAAhC;AAKA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIP,UAAU,EAAd,EAAkB;AAChBO,IAAAA,IAAI,GAAGR,YAAY,CAACS,GAAb,CAAiB,WAAjB,EAA8B,IAA9B,CAAP;;AACA,QAAIN,IAAI,CAACI,IAAL,KAAc,CAAlB,EAAqB;AACnBV,MAAAA,KAAK,CAACa,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,0BAA3C,EAAuE;AAAEC,QAAAA,OAAO,EAAEN,IAAI,CAACO;AAAhB,OAAvE,EAA6F;AAC3FC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASjB,YAAY,CAACS,GAAb,CAAiB,WAAjB,CAA8B;AADhD;AADkF,OAA7F,EAIGS,IAJH,CAISC,GAAD,IAAS;AACff,QAAAA,OAAO,CAAC;AACNC,UAAAA,OAAO,EAAE,KADH;AAENC,UAAAA,GAAG,EAAEa,GAAG,CAAChB,IAFH;AAGNI,UAAAA,IAAI,EAAE;AAHA,SAAD,CAAP;AAKAa,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACD,OAZD,EAaGmB,KAbH,CAaUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OAfH;AAgBD;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BAAiD;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA,qCAAkC,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,YAA3B;AAAwC,UAAA,IAAI,EAAEzB,KAAK,CAAC0B;AAApD;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjD,eACE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,YAA3B;AAAwC,QAAA,IAAI,EAAE1B,KAAK,CAAC2B;AAApD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnCD;;GAAMvB,kB;;KAAAA,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport BrowserStore from '../../utils/BrowserStore'\nimport { isLoggedIn } from '../../utils/auth'\n\nimport '../../styles/organisation/profileHeader.css'\n\nconst HeaderOrganisation = () => {\n  const [data, setData] = useState({\n    loading: true,\n    arr: [],\n    flag: 0\n  })\n  let user = {}\n  if (isLoggedIn()) {\n    user = BrowserStore.get('user-info', true)\n    if (data.flag === 0) {\n      axios.post(process.env.REACT_APP_API_URL + '/api/v1/findNotification', { user_id: user.id }, {\n        headers: {\n          Authorization: `Bearer ${BrowserStore.get('userToken')}`\n        }\n      }).then((res) => {\n        setData({\n          loading: false,\n          arr: res.data,\n          flag: 1\n        })\n        console.log('notification')\n        console.log(data)\n      })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n  return (\n    <div className='ha-prof-header'>\n      <div className='ha-edit-add-organisation-header'><button className='ha-btn-white'> <FontAwesomeIcon className='ha-plus-fa' icon={icons.faPlusCircle} /> Add Your Memories</button>\n        <FontAwesomeIcon className='ha-info-fa' icon={icons.faInfoCircle} />\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderOrganisation\n"]},"metadata":{},"sourceType":"module"}