{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/ism-connect-web-main/src/components/home/FixedTopbar.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as icons from '@fortawesome/free-solid-svg-icons';\nimport { isLoggedIn } from '../../utils/auth';\nimport logo from '../../assets/images/campus/ismlogo.png'; // import smallLogo from '../../assets/images/logos/left-dash-logo-without-bg-with-text.png'\n\nimport smallLogo from '../../assets/images/campus/ISM.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FixedTopbar extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onScroll = ev => {\n      if (window.scrollY >= 250) {\n        this.props.handleScroll('blue', '60px');\n      } else {\n        this.props.handleScroll('transparent');\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.onScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.onScroll);\n  }\n\n  render() {\n    const bigScreen = this.props.bigScreen;\n    let navbarProps = {};\n    Object.assign(navbarProps, this.props);\n    navbarProps.bigScreen = undefined;\n    navbarProps.handleScroll = undefined;\n    navbarProps.handleSidebarToggle = undefined;\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      fixed: \"top\",\n      variant: this.props.variant,\n      bg: this.props.bg,\n      style: {\n        width: '100vw',\n        height: this.props.height,\n        transition: '1s all'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row\",\n            children: bigScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px',\n                paddingLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: logo,\n                height: \"60px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: smallLogo,\n                height: \"50px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: isLoggedIn() ? '/feed' : '/enter',\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-3 bg-white text-dark fw-bold\",\n                style: {\n                  fontSize: '16px',\n                  borderRadius: '15px'\n                },\n                children: isLoggedIn() ? 'GO TO APP' : 'SIGN IN'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"landing-topbar-burger\",\n              className: \"p-3 text-white fw-bold\",\n              style: {\n                fontSize: bigScreen ? '24px' : '16px'\n              },\n              onClick: this.props.handleSidebarToggle,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: icons.faBars\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), \" \", bigScreen ? 'Menu' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FixedTopbar;","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/components/home/FixedTopbar.js"],"names":["React","Component","Navbar","Image","Link","FontAwesomeIcon","icons","isLoggedIn","logo","smallLogo","FixedTopbar","onScroll","ev","window","scrollY","props","handleScroll","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","bigScreen","navbarProps","Object","assign","undefined","handleSidebarToggle","variant","bg","width","height","transition","padding","paddingLeft","fontSize","borderRadius","faBars"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\n\nimport { isLoggedIn } from '../../utils/auth'\n\nimport logo from '../../assets/images/campus/ismlogo.png'\n// import smallLogo from '../../assets/images/logos/left-dash-logo-without-bg-with-text.png'\nimport smallLogo from '../../assets/images/campus/ISM.png'\n\nclass FixedTopbar extends Component {\n\n  onScroll = (ev) => {\n    if (window.scrollY >= 250) {\n      this.props.handleScroll('blue', '60px')\n    } else {\n      this.props.handleScroll('transparent')\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.onScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.onScroll)\n  }\n\n  render() {\n    const bigScreen = this.props.bigScreen\n    let navbarProps = {}\n    Object.assign(navbarProps, this.props)\n\n    navbarProps.bigScreen = undefined\n    navbarProps.handleScroll = undefined\n    navbarProps.handleSidebarToggle = undefined\n\n    return (\n      <Navbar fixed=\"top\" variant={this.props.variant} bg={ this.props.bg } style={{ \n        width: '100vw', \n        height: this.props.height, \n        transition: '1s all' \n      }}>\n        <div className=\"container-fluid\">\n          <Navbar.Brand href=\"#home\">\n          <div className=\"d-flex flex-row\">\n            {bigScreen ? <div style={{ padding: '5px', paddingLeft: '10px' }}>\n              <Image src={logo} height=\"60px\"  />\n            </div> : <div style={{ padding: '5px' }}>\n              <Image src={smallLogo} height=\"50px\" />\n            </div>}\n          </div>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>\n              <Link to={isLoggedIn() ? '/feed' : '/enter'}>\n                <span className=\"p-3 bg-white text-dark fw-bold\" style={{ \n                  fontSize:'16px', borderRadius: '15px' }}>{isLoggedIn() ? 'GO TO APP' : 'SIGN IN'}</span>\n              </Link>\n            </Navbar.Text>\n            <Navbar.Text>\n              <span \n                id=\"landing-topbar-burger\"\n                className=\"p-3 text-white fw-bold\" \n                style={{ fontSize: bigScreen ? '24px' : '16px' }}\n                onClick={this.props.handleSidebarToggle}>\n                <FontAwesomeIcon icon={icons.faBars} /> {bigScreen ? 'Menu' : ''}\n              </span>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    );\n  }\n}\n\nexport default FixedTopbar\n"]},"metadata":{},"sourceType":"module"}