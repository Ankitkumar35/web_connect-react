{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/ism-connect-web-main/src/components/signin/SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Spinner } from 'react-bootstrap';\nimport * as icons from '@fortawesome/free-solid-svg-icons';\nimport Fade from 'react-reveal/Fade';\nimport { parseQuery } from '../../utils/url';\nimport '../../styles/signinup/SignInUp.css';\nimport ismconnectlogo from '../../assets/images/logos/logo.png';\nimport linkedinsignin from '../../assets/images/utils/Sign-In-Small---Default.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignInForm = _ref => {\n  _s();\n\n  var _parseQuery$redirect_;\n\n  let {\n    values,\n    setValues,\n    nextStep,\n    emailIsValid,\n    phoneIsValid,\n    loading,\n    handleSignIn\n  } = _ref;\n\n  const continueForm = e => {\n    // e.preventDefault();\n    nextStep();\n  };\n\n  const [showPassText, setShowPassText] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ha-form-cover\",\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      right: true,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ha-sign-in-up-form\",\n        action: \"\",\n        onSubmit: handleSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ismconnectlogo,\n          alt: \"ismconnectlogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"username\",\n          type: \"email\",\n          value: values.sInId,\n          onChange: e => setValues.setSInId(e.target.value),\n          className: \"ha-text\",\n          placeholder: \"Email Address or Phone Number\",\n          style: {\n            border: emailIsValid || phoneIsValid ? '' : '1px solid red'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"current-password\",\n            type: showPassText ? 'text' : 'password',\n            value: values.setSInPass,\n            onChange: e => setValues.setSInPass(e.target.value),\n            className: \"ha-text\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            onClick: () => {\n              setShowPassText(!showPassText);\n              console.log(showPassText);\n            },\n            className: \"ha-show-pass-icon\",\n            icon: showPassText ? icons.faEye : icons.faEyeSlash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"ha-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Remember Me \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ha-sign-form-btn\",\n            type: \"submit\",\n            disabled: !emailIsValid || loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 26\n            }, this) : 'Log In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forgotpassword\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ha-cover-or\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ha-cover-other-signin\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: process.env.REACT_APP_API_URL + '/api/v1/auth/linkedin?redirect_to=' + ((_parseQuery$redirect_ = parseQuery(window.location.href).redirect_to) !== null && _parseQuery$redirect_ !== void 0 ? _parseQuery$redirect_ : ''),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: linkedinsignin,\n              alt: \"Sign in with LinkedIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ha-cover-new-user\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"New User? Connect with ISMites \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: e => continueForm(e),\n            children: \" Sign Up \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInForm, \"RiDW+ObR1fWCG1wF2x6uJn1LNXI=\");\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/components/signin/SignInForm.js"],"names":["useState","FontAwesomeIcon","Spinner","icons","Fade","parseQuery","ismconnectlogo","linkedinsignin","SignInForm","values","setValues","nextStep","emailIsValid","phoneIsValid","loading","handleSignIn","continueForm","e","showPassText","setShowPassText","sInId","setSInId","target","value","border","setSInPass","console","log","faEye","faEyeSlash","process","env","REACT_APP_API_URL","window","location","href","redirect_to"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Spinner } from 'react-bootstrap'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\nimport Fade from 'react-reveal/Fade'\n\nimport { parseQuery } from '../../utils/url'\n\nimport '../../styles/signinup/SignInUp.css'\n\nimport ismconnectlogo from '../../assets/images/logos/logo.png'\nimport linkedinsignin from '../../assets/images/utils/Sign-In-Small---Default.png'\n\nconst SignInForm = ({ values, setValues, nextStep, emailIsValid, phoneIsValid, loading, handleSignIn }) => {\n  const continueForm = (e) => {\n    // e.preventDefault();\n    nextStep()\n  }\n\n  const [showPassText, setShowPassText] = useState(false)\n\n  return (\n    <div className='ha-form-cover'>\n      <Fade right>\n        <form className='ha-sign-in-up-form' action='' onSubmit={handleSignIn}>\n          <img src={ismconnectlogo} alt='ismconnectlogo' />\n          <h1>Sign In</h1>\n          <input\n            autoComplete='username'\n            type='email'\n            value={values.sInId}\n            onChange={(e) => setValues.setSInId(e.target.value)}\n            className='ha-text'\n            placeholder='Email Address or Phone Number'\n            style={{ border: (emailIsValid || phoneIsValid ? '' : '1px solid red') }}\n          />\n\n          <span><input autoComplete='current-password' type={showPassText ? 'text' : 'password'} value={values.setSInPass} onChange={(e) => setValues.setSInPass(e.target.value)} className='ha-text' placeholder='Password' />\n            <FontAwesomeIcon onClick={() => { setShowPassText(!showPassText); console.log(showPassText) }} className='ha-show-pass-icon' icon={showPassText ? icons.faEye : icons.faEyeSlash} />\n          </span>\n\n          <span>\n            <input type='checkbox' className='ha-checkbox' />\n            <label> Remember Me </label>\n          </span>\n          <p>\n            <button\n              className='ha-sign-form-btn'\n              type='submit'\n              disabled={!emailIsValid || loading}\n            >\n              {loading ? <Spinner animation='grow' /> : 'Log In'}\n            </button>\n            <span><a href='/forgotpassword'>Forgot Password?</a></span>\n          </p>\n          <div className='ha-cover-or'> <h3>Or</h3> </div>\n          <div className='ha-cover-other-signin'>\n            <a href={process.env.REACT_APP_API_URL + '/api/v1/auth/linkedin?redirect_to=' +\n            (parseQuery(window.location.href).redirect_to ?? '')}\n            >\n              <img src={linkedinsignin} alt='Sign in with LinkedIn' />\n            </a>\n          </div>\n        </form>\n        <div className='ha-cover-new-user'><h2>New User? Connect with ISMites <span onClick={(e) => continueForm(e)}> Sign Up </span></h2></div>\n      </Fade>\n    </div>\n  )\n}\n\nexport default SignInForm\n"]},"metadata":{},"sourceType":"module"}