{"ast":null,"code":"import axios from \"axios\";\nimport BrowserStore from \"../utils/BrowserStore\";\nexport const getComments = async function () {\n  let postid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var com = null;\n\n  if (!com) {\n    com = await axios.get(process.env.REACT_APP_API_URL + '/api/v1/comment/' + postid, {\n      headers: {\n        Authorization: `Bearer ${BrowserStore.get('userToken')}`\n      }\n    });\n    com = com.data;\n  }\n\n  const comments = [{\n    id: '1',\n    body: 'First comment',\n    userName: 'Jack',\n    userId: '1',\n    parentId: null,\n    createdAt: '2021-08-16T23:00:33.010+02:00'\n  }, {\n    id: '2',\n    body: 'Second comment',\n    userName: 'John',\n    userId: '2',\n    parentId: null,\n    createdAt: '2021-08-16T23:00:33.010+02:00'\n  }, {\n    id: '3',\n    body: 'First comment first child',\n    userName: 'John',\n    userId: '2',\n    parentId: '1',\n    createdAt: '2021-08-16T23:00:33.010+02:00'\n  }, {\n    id: '4',\n    body: 'Second comment second child',\n    userName: 'John',\n    userId: '2',\n    parentId: '2',\n    createdAt: '2021-08-16T23:00:33.010+02:00'\n  }];\n  return com || comments;\n};\nexport const createComment = async function (text) {\n  let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let postId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  console.warn(parentId);\n  var user = BrowserStore.get('user-info', true);\n  await axios.post(process.env.REACT_APP_API_URL + '/api/v1/comment', {\n    postId: postId,\n    parentId: parentId,\n    userId: user.id,\n    body: text\n  }, {\n    headers: {\n      Authorization: `Bearer ${BrowserStore.get('userToken')}`\n    }\n  });\n  return getComments(postId); // return {\n  //   id: Math.random().toString(36).substr(2, 9),\n  //   body: text,\n  //   parentId,\n  //   userId: '1',\n  //   userName: 'John',\n  //   createdAt: new Date().toISOString()\n  // }\n};\nexport const updateComment = async (text, commentId, postId) => {\n  console.log(commentId + \" -> \" + typeof commentId);\n  await axios.post(process.env.REACT_APP_API_URL + '/api/v1/updateComment', {\n    id: commentId,\n    body: text\n  }, {\n    headers: {\n      Authorization: `Bearer ${BrowserStore.get('userToken')}`\n    }\n  });\n  console.log(postId);\n  return getComments(postId); // return { text }\n};\nexport const deleteComment = async (commentId, postId) => {\n  await axios.post(process.env.REACT_APP_API_URL + '/api/v1/deleteComment', {\n    id: commentId\n  }, {\n    headers: {\n      Authorization: `Bearer ${BrowserStore.get('userToken')}`\n    }\n  }).then(res => {\n    alert(res.data);\n  });\n  console.log(postId);\n  return getComments(postId); // return {}\n};","map":{"version":3,"sources":["/Users/ankit/Desktop/ism-connect-web-main/src/data/comments.js"],"names":["axios","BrowserStore","getComments","postid","com","get","process","env","REACT_APP_API_URL","headers","Authorization","data","comments","id","body","userName","userId","parentId","createdAt","createComment","text","postId","console","warn","user","post","updateComment","commentId","log","deleteComment","then","res","alert"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport BrowserStore from \"../utils/BrowserStore\";\n\nexport const getComments = async (postid = 1) => {\n\n  var com = null;\n  if(!com)\n  {\n    com = await axios.get(process.env.REACT_APP_API_URL + '/api/v1/comment/'+postid, {\n      headers: {\n        Authorization: `Bearer ${BrowserStore.get('userToken')}`\n      }\n    })\n    com = com.data;\n  }\n \n  const comments =  [\n    {\n      id: '1',\n      body: 'First comment',\n      userName: 'Jack',\n      userId: '1',\n      parentId: null,\n      createdAt: '2021-08-16T23:00:33.010+02:00'\n    },\n    {\n      id: '2',\n      body: 'Second comment',\n      userName: 'John',\n      userId: '2',\n      parentId: null,\n      createdAt: '2021-08-16T23:00:33.010+02:00'\n    },\n    {\n      id: '3',\n      body: 'First comment first child',\n      userName: 'John',\n      userId: '2',\n      parentId: '1',\n      createdAt: '2021-08-16T23:00:33.010+02:00'\n    },\n    {\n      id: '4',\n      body: 'Second comment second child',\n      userName: 'John',\n      userId: '2',\n      parentId: '2',\n      createdAt: '2021-08-16T23:00:33.010+02:00'\n    }\n  ]\n  return com||comments;\n}\n\nexport const createComment = async (text, parentId = null,postId=null) => {\n  console.warn(parentId)\n  var user = BrowserStore.get('user-info', true)\n  await axios.post(process.env.REACT_APP_API_URL + '/api/v1/comment',{\n    postId:postId,\n    parentId:parentId,\n    userId:user.id,\n    body:text\n  }, {\n    headers: {\n      Authorization: `Bearer ${BrowserStore.get('userToken')}`\n    }\n  })\n  return getComments(postId);\n  // return {\n  //   id: Math.random().toString(36).substr(2, 9),\n  //   body: text,\n  //   parentId,\n  //   userId: '1',\n  //   userName: 'John',\n  //   createdAt: new Date().toISOString()\n  // }\n}\n\nexport const updateComment = async (text,commentId,postId) => {\n  console.log(commentId+\" -> \"+typeof(commentId));\n  await axios.post(process.env.REACT_APP_API_URL + '/api/v1/updateComment',{\n    id:commentId,\n    body:text\n  }, {\n    headers: {\n      Authorization: `Bearer ${BrowserStore.get('userToken')}`\n    }\n  })\n  console.log(postId);\n  return getComments(postId);\n  // return { text }\n}\n\nexport const deleteComment = async (commentId,postId) => {\n  await axios.post(process.env.REACT_APP_API_URL + '/api/v1/deleteComment',{\n    id:commentId\n  }, {\n    headers: {\n      Authorization: `Bearer ${BrowserStore.get('userToken')}`\n    }\n  }).then((res)=>{\n    alert(res.data);\n  })\n  console.log(postId);\n  return getComments(postId);\n  // return {}\n}\n"]},"metadata":{},"sourceType":"module"}